
/**
 *  Generierung von .col-Classes für ein Grid-System
 *  Zwei Arten von Grid-Classes: mit und ohne eingebauten Margin
 *
 *  @selector .col-xof12-nomargin
 *  @selector .col-xof12
 */
$numberOfCols: 12;
$colSegment: 100 / $numberOfCols;
$colPadding: 1%;

@for $i from 1 through $numberOfCols {
	.col-#{$i}of#{$numberOfCols}-nomargin {
		width: ($colSegment * $i) * 1%;
		float: left;
	}

	.col-#{$i}of#{$numberOfCols} {
		width: (($colSegment * $i) * 1%) - ($colPadding * 2);
		float: left;
		margin: 0 $colPadding;
	}

	.mobile-col-#{$i}of#{$numberOfCols} {
		@include breakpoint(mobile) {
			width: (($colSegment * $i) * 1%) - ($colPadding * 2);
			float: left;
			margin: 0 $colPadding;
		}
	}

	.push-#{$i} {
		position: relative;
		left: ($colSegment * $i) * 1%;
		right: auto;
		// Alternative: margin-left;
	}

	.pull-#{$i} {
		position: relative;
		right: ($colSegment * $i) * 1%;
		left: auto;
		// Alternative: margin-left;
	}
}
.col-12of12 {
	float: none;
	width: 100%;
	margin: 0;
}
.mobile-col-12of12 {

	@include breakpoint(mobile) {
		float: none;
		width: 100%;
		margin: 0;
	}

	@include breakpoint(mobile-sm) {
		float: none;
		width: 100%;
		margin: 0;
	}
}


@mixin width-of12 ($value) {
	width: (($colSegment * $value) * 1%) - ($colPadding * 2);
	margin: 0 auto;
}



/**
 *  Mixin: border-radius nur für die beiden oberen Ecken
 *  Nutzung: @include border-radius-top(3px)
 *
 *	@mixin border-radius-top
 *  @param $radius	Radius der runden Ecke
 */
@mixin border-radius-top($radius: 3px) {
	border-radius: $radius $radius 0 0;
}
@mixin border-radius-bottom($radius: 3px) {
	border-radius: 0 0 $radius $radius;
}



/**
 *  Mixin: triangle -- baut aus CSS Dreiecke ein. Verwendet dazu
 *  	in after:-generierten Content
 *
 *  @param $direction	String up, down, left, right
 *  @param $color		Farbwert des Pfeils
 *  @param $width 		Breite des Pfeils
 *  @param $height 		Höhe des Pfeils
 *	@example 			@include triangle(down, rgba($cGray, 0.4), 16px, 8px);
 *
 *  @TODO: Code für links/rechts ist noch nicht getestet!
 */
@mixin triangle($direction, $color, $width, $height) {
	content: "";
	width: 0px;
	height: 0px;
	border-style: solid;
	@if ($direction == up) {
		border-color: transparent transparent $color transparent;
		border-width: 0 $width/2 $height $width/2;
	}
	@if ($direction == down) {
		border-color: $color transparent transparent transparent;
		border-width: $height $width/2 0 $width/2;
	}
	@if ($direction == left) {
		border-color: transparent $color transparent transparent;
		border-width: $height/2 $width $height/2 0;
	}
	@if ($direction == right) {
		border-color: transparent transparent transparent $color;
		border-width: $height/2 0 $height/2 $width;
	}
}



/**
 *  Setzen des box-sizing-Attributs
 *
 *	@mixin box-sizing
 *	@example @include box-sizing();
 */
@mixin box-sizing() {
	box-sizing: border-box;
}



/**
 *  Vertical-Alignment center/middle
 *
 *	@mixin align-middle
 *	@example @include align-middle();
 */
@mixin align-middle() {
	position: absolute;
	top: 50%;
	transform: translate(0, -50%);
}

/**
 *  Vertical/Horizontal-Alignment center/middle
 *
 *	@mixin align-center-middle
 *	@example @include align-center-middle();
 */
@mixin align-center-middle() {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}


@mixin clearfix() {
	&:after {
		content: '';
		display: table;
		clear: both;
	}
}
.clearfix {
	@include clearfix();
}
%clearfix {
	@include clearfix();
}




.xx-hide {
	display: none;
}
.xx-hide-text {
	display: block;
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}
