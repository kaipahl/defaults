
/**
 * @description quick'n'dirty grid system
 *
 * @selector .col-xof12-nomargin
 * @selector .col-xof12
 */
$numberOfCols: 12;
$colSegment: 100 / $numberOfCols;
$colPadding: 1%;

@for $i from 1 through $numberOfCols {
	.col-#{$i}of#{$numberOfCols}-nomargin {
		width: ($colSegment * $i) * 1%;
		float: left;
	}

	.col-#{$i}of#{$numberOfCols} {
		width: (($colSegment * $i) * 1%) - ($colPadding * 2);
		float: left;
		margin: 0 $colPadding;
	}

	.mobile-col-#{$i}of#{$numberOfCols} {
		@include breakpoint(mobile) {
			width: (($colSegment * $i) * 1%) - ($colPadding * 2);
			float: left;
			margin: 0 $colPadding;
		}
	}

	.push-#{$i} {
		position: relative;
		left: ($colSegment * $i) * 1%;
		right: auto;
		// Alternative: margin-left;
	}

	.pull-#{$i} {
		position: relative;
		right: ($colSegment * $i) * 1%;
		left: auto;
		// Alternative: margin-left;
	}
}
.col-12of12 {
	float: none;
	width: 100%;
	margin: 0;
}

@mixin width-of12 ($value) {
	width: (($colSegment * $value) * 1%) - ($colPadding * 2);
	margin: 0 auto;
}



/**
 * @description clearfix() -- smalles possible clearfix solution, not compatible
 * with very old IEs
 */
@mixin clearfix() {
	&:after {
		content: '';
		display: table;
		clear: both;
	}
}
.clearfix {
	@include clearfix();
}
%clearfix {
	@include clearfix();
}


/**
 * @mixin xx-reset-list
 * @description Reset list styles by removing bullets and margins/paddings
 */
@mixin xx-reset-list {
	padding: 0;
	margin: 0;
	list-style: none;
	text-indent: 0;
}
.reset-list {
	@include xx-reset-list;
}



/**
 * @mixin xx-hide-text
 * @description Hides text only by visibility, but stays readable for screenreaders
 */
.xx-hide-text {
	display: block;
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}




/**
 *	@mixin xx-border-radius-top
 *  @description border-radius only for some corners
 *  @param $radius

 *  @example: @include xx-border-radius-top(3px)
 */
@mixin xx-border-radius-top ($radius: 3px) {
	border-radius: $radius $radius 0 0;
}
@mixin xx-border-radius-bottom ($radius: 3px) {
	border-radius: 0 0 $radius $radius;
}



/**
 *	@mixin xx-triangle
 *  @description creates small triangles/arrows with CSS
 *
 *  @param {string} $direction - 'up', 'down', 'left' or 'right'
 *  @param $color
 *  @param $width
 *  @param $height
 *	@example @include xx-triangle(down, rgba($cGray, 0.4), 16px, 8px);
 *
 *  @TODO: Code for left/right untested
 */
@mixin xx-triangle($direction, $color, $width, $height) {
	content: '';
	width: 0;
	height: 0;
	border-style: solid;
	@if ($direction == up) {
		border-color: transparent transparent $color transparent;
		border-width: 0 $width/2 $height $width/2;
	}
	@if ($direction == down) {
		border-color: $color transparent transparent transparent;
		border-width: $height $width/2 0 $width/2;
	}
	@if ($direction == left) {
		border-color: transparent $color transparent transparent;
		border-width: $height/2 $width $height/2 0;
	}
	@if ($direction == right) {
		border-color: transparent transparent transparent $color;
		border-width: $height/2 0 $height/2 $width;
	}
}




/**
 * @mixin xx-align-middle
 * @description vertical alignment middle
 *
 * @example @include xx-align-middle();
 */
@mixin xx-align-middle() {
	position: absolute;
	top: 50%;
	transform: translate(0, -50%);
}

/**
 * @mixin xx-align-center-middle
 * @description vertical and horizontal alignment middle/center
 *
 * @example @include xx-align-center-middle();
 */
@mixin xx-align-center-middle() {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
